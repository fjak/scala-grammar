module Scala

imports Lexical

exports

  context-free start-symbols

	CompilationUnit

  context-free syntax
	StableId         -> Path
	(Id ".")? "this" -> Path {"This"}

	Id                                          -> StableId
	Path "." Id                                 -> StableId {"Path"}
	%% (Id ".")? "super" ClassQualifier? "." Id -> StableId {"SuperId"}

	{Id "."}+ -> QualId {"QualId"}
	
	"import" {ImportExpr ","}+ -> Import {"Import"}

	%% StableId "." ImportSelectors -> ImportExpr {"SelectorsImportExpr"}
	StableId "." "_"             -> ImportExpr {"WildcardImportExpr"}
	StableId "." Id              -> ImportExpr {"IdImportExpr"}
	
	TopStat (Semi TopStat)* -> TopStatSeq {"TopStats"}
	
	%% (Annotation Nl?)* Modifier* TmplDef -> TopStat {"TopStat"}
	Import                                 -> TopStat
	Packaging                              -> TopStat
	%% PackageObject                       -> TopStat
	
	"package" QualId Nl? "{" TopStatSeq "}" -> Packaging {"Packaging"}
	
	"package" QualId Semi -> PackageDeclaration {"PackageDeclaration"}
	PackageDeclaration* TopStatSeq -> CompilationUnit {"CompilationUnit"}



