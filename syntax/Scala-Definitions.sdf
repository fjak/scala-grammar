module Scala-Definitions

imports
	Scala-Types
	Scala-Expressions
	Scala-PatternMatching
	
exports
	context-free syntax
		PatVarDef      -> Def
		"def" FunDef   -> Def {"FunDefDef"}
		"type" TypeDef -> Def {"TypeDefDef"}
		TmplDef        -> Def
		
		"val" PatDef -> PatVarDef {"ValPatDef"}
		"var" VarDef -> PatVarDef {"VarPatDef"}
		
		{Pattern2 ","}+ (":" Type)? "=" Expr -> PatDef {"PatDef"}
		
		PatDef                     -> VarDef
		%% I am not sure why the following is explicitly given in the grammar, because
		%% PatDef will also match expressions of this kind
		%% {Id ","}+ ":" Type "=" "_" -> VarDef {"WildcardVarDef", prefer}
		
		Id TypeParamClause? "=" Type -> TypeDef {"TypeDef"}
		
		FunSig "=" Expr                                -> FunDef {"ShortFunDef"}
		FunSig ":" Type "=" Expr                       -> FunDef {"FunDef"}
		FunSig "{" Block "}"                           -> FunDef {"BlockFunDef", layout("2.first.line - 1.last.line < num(2)")}
		FunSig "=" "macro" StableId TypeArgs?          -> FunDef {"MacroFunDef"}
		FunSig ":" Type "=" "macro" StableId TypeArgs? -> FunDef {"TypedMacroFunDef"}
		"this" ParamClause ParamClauses "=" ConstrExpr -> FunDef {"ThisExprFunDef"}
		"this" ParamClause ParamClauses ConstrBlock    -> FunDef {"ThisBlockFunDef", layout("4.first.line - 3.last.line < num(2)")}
		
		"class" ClassDef          -> TmplDef {"Class"}
		"case" "class" ClassDef   -> TmplDef {"CaseClass"}
		"case" "object" ObjectDef -> TmplDef {"CaseObject"}
		"object" ObjectDef        -> TmplDef {"Object"}
		"trait" TraitDef          -> TmplDef {"Trait"}
		
		Id TypeParamClause? ConstrAnnotation* AccessModifier? ClassParamClauses ClassTemplateOpt -> ClassDef {"ClassDef"}
		
		Id ClassTemplateOpt -> ObjectDef {"ObjectDef"}
		
		"{" EarlyDefSemi* "}" "with" -> EarlyDefs {"EarlyDefs"}
		
		EarlyDef SEMI -> EarlyDefSemi {"EarlyDefSemi"}
		EarlyDef EOL  -> EarlyDefSemi {"EarlyDefSemi", enforce-newline, prefer}
		EarlyDef EOB  -> EarlyDefSemi {"EarlyDefSemi", avoid}
		
		AnnotationSeq? Modifier* PatVarDef -> EarlyDef {"EarlyDef"}
		
		Id TypeParamClause? TraitTemplateOpt -> TraitDef {"TraitDef"}
