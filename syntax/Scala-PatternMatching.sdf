module Scala-PatternMatching

imports
	Scala-Paths
	Scala-Literals
	Scala-Types
	
exports
	context-free syntax
		{Pattern1 "|"}+ -> Pattern {"Pattern"}
		
		VarId ":" Type -> Pattern1 {"TypedPattern"}
		"_" ":" Type   -> Pattern1 {"WildcardTypedPattern"}
		Pattern2       -> Pattern1
		
		VarId "@" Pattern3 -> Pattern2 {"PatternBinder"}
		Pattern3           -> Pattern2
		
		SimplePattern SimplePatternOp* -> Pattern3 {"SimplePattern"}
		
		Id SimplePattern -> SimplePatternOp {"SimplePatternOp", layout("2.first.line - 1.last.line < num(2)")}
		
		"_"                                                   -> SimplePattern {"WildcardPattern"}
		%% VarId                                                 -> SimplePattern {"VariablePattern"}
		Literal                                               -> SimplePattern {"LiteralPattern"}
		StableId                                              -> SimplePattern {"StableIdPattern"}
		StableId "(" Patterns ")"                             -> SimplePattern {"ConstructorPattern"}
		"(" Patterns ")"                                      -> SimplePattern {"TuplePattern"}
		StableId "(" (Patterns ",")? (VarId "@")? "_" "*" ")" -> SimplePattern {"PatternSequence"}
		
		{Pattern ","}* -> Patterns {"Patterns"}
		
		
		
		
		
		