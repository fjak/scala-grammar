language Scala
start symbol Expr

test anonymous parameterless function [[
	() => "hello"
]] parse to FunExpr(_, _)

test anonymous function with one untyped parameter [[
	(x) => x
]] parse to FunExpr(_, _)

test anonymous function with one untyped parameter (special notation) [[
	x => x
]]

test anonymous function with one typed parameter [[
	(x: Int) => x
]]

test anonymous function with multiple parameters [[
	(x, _, z) => x + z
]]

test block function without parameter (block with only result expr) [[
	{ () =>
		val x = foo
		var z = bar
	}
]]

test block function with one parameter (block with ony result expr) [[
	{ (in) =>
	  val out = blark
	  out
	}
]]

test block function with one parameter (special notation) [[
	{ in =>
	  val x = foo
	  x
	}
]]