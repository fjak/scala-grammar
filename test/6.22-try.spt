language Scala
start symbol Expr

test simplest try according to ยง6.22 [[
	try { foo() }
]] parse to TryExpr(_)

test try without {} (undocumented, but accepted by scalac 2.10) [[
	try foo()
]] parse to TryExpr(_)

test try {} catch {} [[
	try { foo() } catch { case e: Exception => }
]] parse to TryCatchExpr(_, _)

test try catch {} [[
	try foo() catch { case e: Exception => }
]] parse to TryCatchExpr(_, _)

test try catch [[
	try foo() catch onInterrupt(())
]] parse to TryCatchExpr(_, _)

test try {} finally [[
	try { foo() } finally cleanup()
]] parse to TryFinallyExpr(_, _)

test try finally [[
	try foo() finally cleanup()
]] parse to TryFinallyExpr(_, _)

test try {} catch {} finally [[
	try { foo() } catch { case e: Exception => } finally cleanup()
]] parse to TryCatchFinallyExpr(_, _, _)

test try catch {} finally [[
	try foo() catch { case e: Exception => } finally cleanup()
]] parse to TryCatchFinallyExpr(_, _, _)

test try catch finally [[
	try foo() catch onInterrupt(()) finally cleanup()
]] parse to TryCatchFinallyExpr(_, _, _)

test [[
	try try try 10
]] parse to TryExpr(TryExpr(TryExpr(_)))

test [[
	try try try 10 catch { case e => 20 } finally 30
]] parse to TryExpr(TryExpr(TryCatchFinallyExpr(_, _, _)))

test [[
	try try try 10 catch { case e => 20 } finally 30 finally 40
]] parse to TryExpr(TryFinallyExpr(TryCatchFinallyExpr(_, _, _), _))

test [[
	try try try 10 catch { case e => 20 } finally 30 finally 40 finally 50
]] parse to TryFinallyExpr(TryFinallyExpr(TryCatchFinallyExpr(_, _, _), _), _)

test [[
	try try try 10 finally 50
]] parse to TryExpr(TryExpr(TryFinallyExpr(_, _)))
